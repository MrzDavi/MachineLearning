# -*- coding: utf-8 -*-
"""2.0- Python: Fundamentos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u606o2gXTwR128IZPhLfsOUT_frt9rkG

---

<h1 align=left><font size = 8, style="color:rgb(200,0,0)"><b>Python: Fundamentos</b></font></h1>

---

### **Lista de Exercícios Básicos em Python**

#### **1. Tipos de Variáveis**

1. **Identificação de Tipos de Dados:**
   - Crie três variáveis, uma para cada tipo: `int`, `float`, e `str`. Atribua valores a essas variáveis e use a função `type()` para imprimir o tipo de cada variável.
"""

idade = 30
preco = 19.99
nome = "João"

print(type(idade))
print(type(preco))
print(type(nome))

"""
2. **Conversão de Tipos:**
   - Dada a string `"123"`, converta-a em um inteiro e em um número de ponto flutuante. Verifique os tipos resultantes.
"""

string_numero = "123"


numero_inteiro = int(string_numero)
numero_float = float(string_numero)

print(type(numero_inteiro))
print(type(numero_float))

"""
3. **Operações Básicas com Diferentes Tipos de Dados:**
   - Crie duas variáveis, uma `int` e uma `float`, e realize operações de adição, subtração, multiplicação e divisão entre elas. Observe os tipos de dados dos resultados.

"""

int_var = 10
float_var = 3.5

adicao = int_var + float_var
subtracao = int_var - float_var
multiplicacao = int_var * float_var
divisao = int_var / float_var

tipo_adicao = type(adicao)
tipo_subtracao = type(subtracao)
tipo_multiplicacao = type(multiplicacao)
tipo_divisao = type(divisao)

print("Adição:", adicao, "Tipo:", tipo_adicao)
print("Subtração:", subtracao, "Tipo:", tipo_subtracao)
print("Multiplicação:", multiplicacao, "Tipo:", tipo_multiplicacao)
print("Divisão:", divisao, "Tipo:", tipo_divisao)

"""#### **2. Estruturas Básicas (Listas, Dicionários)**

4. **Manipulação de Listas:**
   - Crie uma lista com os números de 1 a 5. Adicione o número 6 ao final da lista, remova o número 2, e inverta a ordem dos elementos.
"""

lista = [1, 2, 3, 4, 5]
lista.append(6)
lista.remove(2)
lista.reverse()
print(lista)

"""
5. **Acessando Elementos da Lista:**
   - Dada a lista `[10, 20, 30, 40, 50]`, acesse e imprima o primeiro, o terceiro e o último elemento da lista.

"""

lista = [10, 20, 30, 40, 50]
print(lista[0])
print(lista[2])
print(lista[-1])

"""
6. **Criação e Manipulação de Dicionários:**
   - Crie um dicionário para armazenar as notas de três alunos (ex.: `{'João': 8.5, 'Maria': 9.0, 'Pedro': 7.5}`). Adicione a nota de um quarto aluno, remova a nota de um aluno, e imprima todas as chaves e valores do dicionário.


"""

notas = {'João': 8.5, 'Maria': 9.0, 'Pedro': 7.5}
notas['Ana'] = 8.0
del notas['Pedro']
print(notas.keys())
print(notas.values())

"""
7. **Acessando Elementos do Dicionário:**
   - Usando o dicionário criado no exercício anterior, acesse e imprima a nota de um aluno específico, por exemplo, `Maria`.
"""

notas = {'João': 8.5, 'Maria': 9.0, 'Ana': 8.0}
print(notas['Maria'])

"""#### **3. Laços Condicionais**

8. **Verificação de Números Pares e Ímpares:**
   - Escreva um código que percorre uma lista de números de 1 a 10 e imprime se cada número é par ou ímpar.
"""

numeros = list(range(1, 11))
for numero in numeros:
    if numero % 2 == 0:
        print(f"{numero} é par")
    else:
        print(f"{numero} é ímpar")

"""
9. **Encontrando o Maior Número:**
   - Dada uma lista de números `[3, 7, 2, 8, 5, 10]`, escreva um código que encontre e imprima o maior número da lista.
"""

numeros = [3, 7, 2, 8, 5, 10]
print(max(numeros))

"""
10. **Contando Ocorrências de um Elemento:**
    - Escreva um código que percorra uma lista de elementos (por exemplo, `['a', 'b', 'a', 'c', 'a', 'b']`) e conte quantas vezes o elemento `'a'` aparece na lista.
"""

elementos = ['FOGO', 'AGUA', 'FOGO', 'TERRA', 'GRAMA']
contagem = elementos.count('FOGO')
print(contagem)